{"version":3,"sources":["node_modules/three/build/three.module.js","js/app.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","l","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","options","_this3","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","texture","setSize","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super8","count","_this9","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix$1","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super9","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_super10","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_super11","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super12","Uint8BufferAttribute","_BufferAttribute2","_super13","Uint8ClampedBufferAttribute","_BufferAttribute3","_super14","Int16BufferAttribute","_BufferAttribute4","_super15","Uint16BufferAttribute","_BufferAttribute5","_super16","Int32BufferAttribute","_BufferAttribute6","_super17","Uint32BufferAttribute","_BufferAttribute7","_super18","Float16BufferAttribute","_BufferAttribute8","_super19","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super20","Float64BufferAttribute","_BufferAttribute10","_super21","_id$2","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_super22","_this14","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super23","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super24","widthSegments","heightSegments","depthSegments","_this16","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super25","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","clipCullDistance","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super26","_this18","PerspectiveCamera","_Camera","_super27","fov","aspect","_this19","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super28","renderTarget","_this20","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super29","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super30","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super31","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","renderMultiDraw","starts","counts","drawCount","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super32","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","disposeTexture","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_super33","_this25","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateVertexExtensions","extensionClipCullDistance","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super34","_this26","isMeshDepthMaterial","_Material4","_super35","_this27","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","_compareToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super36","_this28","isArrayCamera","Group","_Object3D4","_super37","_this29","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","WebXRManager","_EventDispatcher6","_super38","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","_WebGLRenderer","_super39","FogExp2","Fog","Scene","_Object3D5","_super40","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super41","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super42","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super43","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super44","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super45","_this36","isBone","DataTexture","_Texture5","_super46","_this37","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super47","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_super48","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_super49","_this40","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","isWebGPURenderer","culled","_Material6","_super50","_this41","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super51","_this42","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super52","_this43","LineLoop","_Line2","_super53","_this44","_Material7","_super54","_this45","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super55","_this46","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super56","video","_this47","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super57","_this48","CompressedTexture","_Texture8","_super58","_this49","CompressedArrayTexture","_CompressedTexture","_super59","_this50","CompressedCubeTexture","_CompressedTexture2","_super60","_this51","isCompressedCubeTexture","CanvasTexture","_Texture9","_super61","_this52","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_super62","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this53","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super63","aRadius","_this54","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super64","curveType","_this55","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super65","_this56","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super66","_this57","isCubicBezierCurve3","LineCurve","_Curve5","_super67","_this58","isLineCurve","LineCurve3","_Curve6","_super68","_this59","isLineCurve3","QuadraticBezierCurve","_Curve7","_super69","_this60","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super70","_this61","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super71","_this62","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super72","_this63","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super73","_this64","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super74","phiStart","phiLength","_this65","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super75","capSegments","radialSegments","_this66","CircleGeometry","_BufferGeometry4","_super76","thetaStart","thetaLength","_this67","segment","CylinderGeometry","_BufferGeometry5","_super77","radiusTop","radiusBottom","openEnded","_this68","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super78","_this69","PolyhedronGeometry","_BufferGeometry6","_super79","_this70","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super80","_this71","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super81","thresholdAngle","_this72","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super82","_this73","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super83","_this74","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super84","_this75","OctahedronGeometry","_PolyhedronGeometry3","_super85","_this76","RingGeometry","_BufferGeometry9","_super86","innerRadius","outerRadius","thetaSegments","phiSegments","_this77","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super87","_this78","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super88","_this79","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super89","_this80","TorusGeometry","_BufferGeometry12","_super90","tube","tubularSegments","_this81","TorusKnotGeometry","_BufferGeometry13","_super91","_this82","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super92","_this83","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super93","_this84","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super94","_this85","RawShaderMaterial","_ShaderMaterial","_super95","_this86","_Material9","_super96","_this87","_MeshStandardMaterial","_super97","_this88","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_super98","_this89","_Material11","_super99","_this90","_Material12","_super100","_this91","_Material13","_super101","_this92","_Material14","_super102","_this93","_LineBasicMaterial","_super103","_this94","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super104","_this95","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super105","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super106","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super107","ColorKeyframeTrack","_KeyframeTrack2","_super108","NumberKeyframeTrack","_KeyframeTrack3","_super109","QuaternionLinearInterpolant","_Interpolant4","_super110","QuaternionKeyframeTrack","_KeyframeTrack4","_super111","StringKeyframeTrack","_KeyframeTrack5","_super112","VectorKeyframeTrack","_KeyframeTrack6","_super113","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super114","response","_this96","_wrapNativeSuper","FileLoader","_Loader","_super115","_this97","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super116","CompressedTextureLoader","_Loader3","_super117","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super118","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super119","urls","DataTextureLoader","_Loader6","_super120","texData","TextureLoader","_Loader7","_super121","Light","_Object3D11","_super122","_this98","HemisphereLight","_Light","_super123","_this99","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super124","_this100","isSpotLightShadow","SpotLight","_Light2","_super125","_this101","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super126","_this102","_cubeDirections","_cubeUps","PointLight","_Light3","_super127","_this103","DirectionalLightShadow","_LightShadow3","_super128","_this104","isDirectionalLightShadow","DirectionalLight","_Light4","_super129","_this105","AmbientLight","_Light5","_super130","_this106","RectAreaLight","_Light6","_super131","_this107","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super132","_this108","MaterialLoader","_Loader8","_super133","_this109","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super134","_this110","BufferGeometryLoader","_Loader9","_super135","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super136","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super137","_this111","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super138","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super139","_this112","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super140","_this113","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super141","_this114","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super142","_this115","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_super143","_this116","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super144","_this117","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super145","_this118","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super146","_this119","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","_super147","sphereSize","_this120","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super148","_this121","GridHelper","_LineSegments2","_super149","_this122","PolarGridHelper","_LineSegments3","_super150","sectors","rings","_this123","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super151","_this124","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super152","_this125","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super153","_this126","Box3Helper","_LineSegments6","_super154","_this127","PlaneHelper","_Line3","_super155","_this128","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super156","headLength","headWidth","_this129","setDirection","setColor","AxesHelper","_LineSegments7","_super157","_this130","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","THREE","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","__esModule","default","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","Sketch","offsetWidth","offsetHeight","appendChild","addObjects","getElementById"],"mappings":"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","file":"app.c3f9f951.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '160';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$1 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$1 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false, // set to use shader texture LOD\n\t\t\tclipCullDistance: false // set to use vertex shader clipping\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // deprecated\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( range.start, range.start + range.count ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// deprecated\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\treturn color;\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance && extensions.has( 'WEBGL_clip_cull_distance' ),\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new srcAttribute.constructor( dstArray, itemSize, normalized );\n\t\t\t\tdstAttribute.setUsage( srcAttribute.usage );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry atributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.isWebGPURenderer ? WebGPUCoordinateSystem : WebGLCoordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import * as THREE from \"three\";\r\n\r\nexport default class Sketch {\r\n  constructor(options) {\r\n    this.container = options.domElement;\r\n    this.width = options.domElement.offsetWidth;\r\n    this.height = options.domElement.offsetHeight;\r\n    this.camera = new THREE.PerspectiveCamera(70, this.width / this.height, 0.01, 10);\r\n    this.camera.position.z = 1;\r\n\r\n    this.scene = new THREE.Scene();\r\n\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this.renderer.setSize(this.width, this.height);\r\n    this.container.appendChild(this.renderer.domElement);\r\n\r\n    this.time = 0;\r\n    this.addObjects();\r\n    this.render();\r\n  }\r\n\r\n  addObjects() {\r\n    this.geometry = new THREE.BoxGeometry(0.2, 0.2, 0.2);\r\n    this.material = new THREE.MeshNormalMaterial();\r\n\r\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\r\n    this.scene.add(this.mesh);\r\n  }\r\n\r\n  render() {\r\n    this.time += 0.05;\r\n    this.renderer.render(this.scene, this.camera)\r\n    requestAnimationFrame(this.render.bind(this));\r\n  }\r\n}\r\n\r\nnew Sketch({\r\n    domElement: document.getElementById(\"container\")\r\n});\r\n"]}